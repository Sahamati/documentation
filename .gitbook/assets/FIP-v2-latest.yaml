swagger: '2.0'
info:
  title: Financial Information Provider API
  x-custom-tags:
    x-api-name: Financial Information Provider (FIP) API
  description: >-
    # Summary

    The Financial Information Providers (FIPs) maintain accounts of the
    customers. The Account Aggregator may request FIP for financial information
    of the customers using explicit electronic consents obtained through
    direct customer interaction. The APIs defined here are implemented by the FIPs
    to enable Account Aggregators to discover a customerâ€™s account, perform
    account linking and enable query of the financial information based on
    explicit digitally signed electronic consent. The FIP further maintains the
    status of the consents and exposes the notification API so AA can
    notify it about the changes in the status of consent, account delinking
    requests etc.


    ---
  version: 2.1.0
  contact:
    email: help@sahamati.org.in
tags:
  - name: Account Discovery and Linking
    description: These APIs are used by AA to discover and link customer FIP accounts.
  - name: Data Flow
    description: These APIs are used by AA to faciliate flow of encrypted financial information from FIP to FIU.
  - name: Consent & Consent Notifications
    description: These APIs are used by AA to send signed consent artefact and consent status update notifications to FIP.
  - name: Monitoring
    description: APIs to check availability of FIP application.
schemes:
  - https
securityDefinitions:
  AA_api_key:
    type: apiKey
    name: aa_api_key
    in: header
    description: AA_api_key is provided to FIP by the AA
security:
  - AA_api_key: []
consumes:
  - application/json
produces:
  - application/json
host: api.sandbox.sahamati.org.in
basePath: /proxy/v2
paths:
  /Accounts/discover:
    post:
      tags:
        - Account Discovery and Linking
      description: >-
        This API enables an AA to discover accounts belonging to a customer
        based on the customer identifiers. A list of masked account information
        and corresponding linkRefNumber for each discovered account is returned
        based on the identifier matching logic at FIP.

         <br>Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
        - name: x-jws-signature
          type: string
          
          in: header
          required: true
          description: Detached JWS of the body
        - name: x-recipient-id
          type: string
          
          in: header
          required: true
          description: Detached JWS of the body
        - name: body
          in: body
          description: Information of the user for discovering the account/s at the FIP
          schema:
            $ref: '#/definitions/AccDiscoveryRequestWrapper'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccDiscoveryResponse'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
        '400':
          description: Bad Request
          schema:
              $ref: '#/definitions/BadRequest'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
        '401':
          description: Unauthorized Access
          schema:
              $ref: '#/definitions/UnauthorizedAccess'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body  
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/NotFoundDiscover'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
        '409':
          description: Conflict
          schema:
              $ref: '#/definitions/Conflict'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
        '412':
          description: Precondition failed
          schema:
              $ref: '#/definitions/PreconditionFailed'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
        '500':
          description: Internal Server Error
          schema:
              $ref: '#/definitions/InternalServerError'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
        '501':
          description: Not Implemented
          schema:
              $ref: '#/definitions/NotImplemented'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
        '503':
          description: Service Unavailable
          schema:
              $ref: '#/definitions/ServiceUnavailable'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
  /Accounts/link:
    post:
      tags:
        - Account Discovery and Linking
      description: >-
        This API will be used for initiating an account link request to link
        selected account/s with the AA customer address.

        <br>Note: "Request Body Example Value" and "Responses Example Value"
        given below is for illustrative purposes only.
      parameters:
        - name: x-jws-signature
          type: string
          in: header
          required: true
          description: Detached JWS of the body
        - name: x-recipient-id
          type: string
          
          in: header
          required: true
          description: Detached JWS of the body
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AccLinkRequestWrapper'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccLinkResponse'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
        '400':
          description: Bad Request
          schema:
              $ref: '#/definitions/BadRequestLink'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
        '401':
          description: Unauthorized Access
          schema:
              $ref: '#/definitions/UnauthorizedAccess'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body                
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/NotFoundLink'
          headers:
            x-jws-signature:
                type: string
                description: Detached JWS of the response body
        '409':
          description: Conflict
          schema:
              $ref: '#/definitions/Conflict'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '412':
          description: Precondition failed
          schema:
              $ref: '#/definitions/PreconditionFailed'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '500':
          description: Internal Server Error
          schema:
              $ref: '#/definitions/InternalServerError'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '501':
          description: Not Implemented
          schema:
              $ref: '#/definitions/NotImplemented'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '503':
          description: Service Unavailable
          schema:
              $ref: '#/definitions/ServiceUnavailable'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
  /Accounts/delink:
    post:
      tags:
        - Account Discovery and Linking
      description: >-
        This API will be used to delete a previously established account link to
        the user's profile. Once deleted, the financial information can not be retrieved for that account through Account Aggregator.

         <br>Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
        - name: x-jws-signature
          type: string          
          in: header
          required: true
          description: Detached JWS of the body
        - name: x-recipient-id
          type: string
          
          in: header
          required: true
          description: Detached JWS of the body
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AccDeLinkRequestWrapper'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccDeLinkResponse'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '400':
          description: Bad Request
          schema:
              $ref: '#/definitions/BadRequestLink'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '401':
          description: Unauthorized Access
          schema:
              $ref: '#/definitions/UnauthorizedAccess'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/NotFoundLink'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '409':
          description: Conflict
          schema:
              $ref: '#/definitions/Conflict'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '412':
          description: Precondition failed
          schema:
              $ref: '#/definitions/PreconditionFailed'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '500':
          description: Internal Server Error
          schema:
              $ref: '#/definitions/InternalServerError'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '501':
          description: Not Implemented
          schema:
              $ref: '#/definitions/NotImplemented'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '503':
          description: Service Unavailable
          schema:
              $ref: '#/definitions/ServiceUnavailable'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
  /Accounts/link/verify:
    post:
      tags:
        - Account Discovery and Linking
      description: >-
        This API is used to submit the token/OTP(received from the customer)
        back to FIP so that account linkage can be completed. It is used only in
        case of token-based authentication for linking accounts.

        <br>Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
        - name: x-jws-signature
          type: string          
          in: header
          required: true
          description: Detached JWS of the body
        - name: x-recipient-id
          type: string
          
          in: header
          required: true
          description: Detached JWS of the body
        - name: body
          in: body
          schema:
            $ref: '#/definitions/LinkDelinkTokenRequestWrapper'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LinkDelinkTokenResponse'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '400':
          description: Bad Request
          schema:
              $ref: '#/definitions/BadRequestLinkToken'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '401':
          description: Unauthorized
          schema:
              $ref: '#/definitions/UnauthorizedLinkToken'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/NotFoundLink'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '409':
          description: Conflict
          schema:
              $ref: '#/definitions/Conflict'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '412':
          description: Precondition failed
          schema:
              $ref: '#/definitions/PreconditionFailed'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '500':
          description: Internal Server Error
          schema:
              $ref: '#/definitions/InternalServerError'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '501':
          description: Not Implemented
          schema:
              $ref: '#/definitions/NotImplemented'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '503':
          description: Service Unavailable
          schema:
              $ref: '#/definitions/ServiceUnavailable'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
  /FI/request:
    post:
      tags:
        - Data Flow
      description: >-
        This API is used by the AA to request for financial information from the FIP. 
        The FIP will validate the request against the signed consent and return a 
        sessionID which can then be used by the AA to fetch the required data.

         <br>Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
        - name: x-jws-signature
          type: string          
          in: header
          required: true
          description: Detached JWS of the body
        - name: x-recipient-id
          type: string
          
          in: header
          required: true
          description: Detached JWS of the body
        - name: body
          in: body
          required: true
          description: Initialization parameters for requesting the financial information
          schema:
            $ref: '#/definitions/FIRequestWrapper'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FIResponse'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '400':
          description: Bad Request
          schema:
              $ref: '#/definitions/BadRequestFIRequest'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '401':
          description: Unauthorized Access
          schema:
              $ref: '#/definitions/UnauthorizedAccess'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '403':
          description: Forbidden
          schema:
              $ref: '#/definitions/ForbiddenFIRequest'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/NotFoundFIRequest'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '409':
          description: Conflict
          schema:
              $ref: '#/definitions/Conflict'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '412':
          description: Precondition failed
          schema:
              $ref: '#/definitions/PreconditionFailed'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '500':
          description: Internal Server Error
          schema:
              $ref: '#/definitions/InternalServerError'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '501':
          description: Not Implemented
          schema:
              $ref: '#/definitions/NotImplemented'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '503':
          description: Service Unavailable
          schema:
              $ref: '#/definitions/ServiceUnavailable'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
  /FI/fetch:
    post:
      tags:
        - Data Flow
      description: >-
        This API is used to fetch financial information from FIP once AA recieves the data ready notification.

         <br>Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
        - name: x-jws-signature
          type: string          
          in: header
          required: true
          description: Detached JWS of the body
        - name: x-recipient-id
          type: string
          
          in: header
          required: true
          description: Detached JWS of the body
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FIFetchRequestWrapper'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FIFetchResponse'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '400':
          description: Bad Request
          schema:
              $ref: '#/definitions/BadRequestFIFetch'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body                
        '401':
          description: Unauthorized Access
          schema:
              $ref: '#/definitions/UnauthorizedAccess'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body                
        '403':
          description: Forbidden
          schema:
              $ref: '#/definitions/ForbiddenFIFetch'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/NotFoundFIFetch'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '409':
          description: Conflict
          schema:
              $ref: '#/definitions/Conflict'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '412':
          description: Precondition failed
          schema:
              $ref: '#/definitions/PreconditionFailed'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '500':
          description: Internal Server Error
          schema:
              $ref: '#/definitions/InternalServerError'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '501':
          description: Not Implemented
          schema:
              $ref: '#/definitions/NotImplemented'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '503':
          description: Service Unavailable
          schema:
              $ref: '#/definitions/ServiceUnavailable'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
  /Consent/Notification:
    post:
      tags:
        - Consent & Consent Notifications
      description: >-
         This API is intended to be used by AA to notify the change in consent status due to the consent management 
         operations performed by the customer. 
         For more details about consent notification flow, please refer FAQ section.

         <br>Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
        - name: x-jws-signature
          type: string          
          in: header
          required: true
          description: Detached JWS of the body
        - name: x-recipient-id
          type: string
          
          in: header
          required: true
          description: Detached JWS of the body
        - name: body
          in: body
          description: Notification about the status of consent
          schema:
            $ref: '#/definitions/ConsentNotificationRequestWrapper'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConsentNotificationResponse'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '400':
          description: Bad Request
          schema:
              $ref: '#/definitions/BadRequestConsentNotification'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '401':
          description: Unauthorized Access
          schema:
              $ref: '#/definitions/UnauthorizedAccess'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/NotFound'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '409':
          description: Conflict
          schema:
              $ref: '#/definitions/Conflict'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '412':
          description: Precondition failed
          schema:
              $ref: '#/definitions/PreconditionFailed'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '500':
          description: Internal Server Error
          schema:
              $ref: '#/definitions/InternalServerError'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '501':
          description: Not Implemented
          schema:
              $ref: '#/definitions/NotImplemented'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '503':
          description: Service Unavailable
          schema:
              $ref: '#/definitions/ServiceUnavailable'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
  /Consent:
    post:
      tags:
        - Consent & Consent Notifications
      description: >-
        This API will be used by the AA to send the consent artefact to the FIP
        on creation.

         <br>Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
        - name: x-jws-signature
          type: string          
          in: header
          required: true
          description: Detached JWS of the body
        - name: x-recipient-id
          type: string
          
          in: header
          required: true
          description: Detached JWS of the body
        - name: body
          in: body
          description: The Signed Consent sent by AA to FIP.
          schema:
            $ref: '#/definitions/ConsentArtefactRequestWrapper'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConsentNotificationResponse'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '400':
          description: Bad Request
          schema:
              $ref: '#/definitions/BadRequestConsentNotification'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '401':
          description: Unauthorized Access
          schema:
              $ref: '#/definitions/UnauthorizedAccess'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body                
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/NotFound'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '409':
          description: Conflict
          schema:
              $ref: '#/definitions/Conflict'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '412':
          description: Precondition failed
          schema:
              $ref: '#/definitions/PreconditionFailed'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '500':
          description: Internal Server Error
          schema:
              $ref: '#/definitions/InternalServerError'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '501':
          description: Not Implemented
          schema:
              $ref: '#/definitions/NotImplemented'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '503':
          description: Service Unavailable
          schema:
              $ref: '#/definitions/ServiceUnavailable'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
  /Heartbeat:
    get:
      tags:
        - Monitoring
      description: |-
        This API can be used by the AAs to check availability of the FIP application.

         <br>Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HeartbeatResponse'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '400':
          description: Bad Request
          schema:
              $ref: '#/definitions/BadRequest'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '401':
          description: Unauthorized Access
          schema:
              $ref: '#/definitions/UnauthorizedAccess'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/NotFound'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '500':
          description: Internal Server Error
          schema:
              $ref: '#/definitions/InternalServerError'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '501':
          description: Not Implemented
          schema:
              $ref: '#/definitions/NotImplemented'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
        '503':
          description: Service Unavailable
          schema:
              $ref: '#/definitions/ServiceUnavailable'
          headers:
            x-jws-signature:
                type: string                
                description: Detached JWS of the response body
definitions:
  AccDiscoveryRequestWrapper:
    type: object
    required:
      - ver
      - timestamp
      - txnid
      - Customer
      - FITypes
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version.
        xml:
          attribute: true
      timestamp:
        type: string
        description: Request creation timestamp.
        format: date-time
        example: '2023-06-26T06:41:54.904+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: f35761ac-4a18-11e8-96ff-0277a9fbfedc
        xml:
          attribute: true
      Customer:
        type: object
        required:
          - id
          - Identifiers
        description: >-
          This block would contain the information about the customer including
          the identifiers & the customer address at the AA
        properties:
          id:
            type: string
            example: customer_identifier@AA_identifier
            description: Identifier of the Customer generated during the registration with AA.
            xml:
              attribute: true
          Identifiers:
            type: array
            items:
              type: object
              description: >-
                A set of Identifiers required for discovering the accounts of a customer at the FIP. 
                It is mandatory to send atleast one STRONG category Identifier. 
                All identifiers which are used primarily for discovery must be authenticated 
                to ensure that they belong to the user to prevent malicious activity.
              required:
                - category
                - type
                - value
              properties:
                category:
                  type: string
                  description: >-
                    Category of identifiers based on the ability to find
                    authenticity online.
                  enum:
                    - STRONG
                    - WEAK
                    - ANCILLARY
                  xml:
                    attribute: true
                type:
                  type: string
                  description: Specifies the type of identifier.
                  example: AADHAAR
                  xml:
                    attribute: true
                  enum:
                    - MOBILE
                    - AADHAR
                    - EMAIL
                    - PAN
                    - DOB
                    - ACCNO
                    - CRN
                    - PPAN
                    - Others
                value:
                  type: string
                  description: Contains the value/number of selected identifer
                  example: XXXXXXXXXXXXXXXX
                  xml:
                    attribute: true
      FITypes:
        $ref: '#/definitions/FITypes'                  
  AccDiscoveryResponse:
    type: object
    required:
      - ver
      - timestamp
      - txnid
      - DiscoveredAccounts
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version.
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T11:39:57.153Z'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: f35761ac-4a18-11e8-96ff-0277a9fbfedc
        xml:
          attribute: true
      DiscoveredAccounts:
        description: A list of discovered accounts
        type: array
        items:
          $ref: '#/definitions/Account'
  AccLinkRequestWrapper:
    type: object
    required:
      - ver
      - timestamp
      - txnid
      - Customer
    properties:
      ver:
        type: string
        description: API version
        example: '2.0.0'
        xml:
          attribute: true
      timestamp:
        type: string
        description: Current Timestamp
        format: date-time
        example: '2023-06-26T17:51:18.412Z'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: f35761ac-4a18-11e8-96ff-0277a9fbfedc
        xml:
          attribute: true
      Customer:
        type: object
        required:
          - id
          - Accounts
        description: Customer identifiers including AA virtual address.
        properties:
          id:
            type: string
            example: customer_identifier@AA_identifier
            description: Identifier of the Customer generated during the registration with AA.
            xml:
              attribute: true
          Accounts:
            description: 'A list of customer''s accounts to be linked '
            type: array
            items:
              $ref: '#/definitions/Account'
    xml:
      name: AccLinkRequest
  AccLinkResponse:
    description: A list of account that are linked
    required:
      - ver
      - timestamp
      - txnid
      - AuthenticatorType
      - RefNumber
    properties:
      ver:
        type: string
        description: API version
        example: '2.0.0'
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T06:13:30.967+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: f35761ac-4a18-11e8-96ff-0277a9fbfedc
        xml:
          attribute: true
      AuthenticatorType:
        type: string
        enum:
          - DIRECT
          - TOKEN
        description: |-
          There are two kinds of authentications that the FIP may support
           (1) Direct Authentication- The FIP obtains confirmation through a direct interaction with the customer.
           (2) Token-based Authentication- In this case, a token (e.g., a short-lived one-time password) is issued to the customer, which the customer can then supply to the AA for subsequently forwarding to the FIP.
        example: TOKEN
      RefNumber:
        type: string
        description: Temporary reference number generated by FIP for account linking request
        example: f6b1482e-8f08-11e8-862a-02552b0d3c36
    xml:
      name: AccLinkResponse
  AccDeLinkRequestWrapper:
    type: object
    required:
      - ver
      - timestamp
      - txnid
      - Account
    description: A list of account to be linked
    properties:
      ver:
        type: string
        description: API version
        example: '2.0.0'
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T17:51:18.412Z'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: f35761ac-4a18-11e8-96ff-0277a9fbfedc
        xml:
          attribute: true
      Account:
        type: object
        required:
          - customerAddress
          - linkRefNumber
        properties:
          customerAddress:
            type: string
            description: Identifier of the Customer generated during the registration with AA.
            example: customer_address@aa_identifier
            xml:
              attribute: true
          linkRefNumber:
            type: string
            description: Reference number assigned by FIP as part of Account Linking Process.
            example: xxxxxxxxxxxxx
            xml:
              attribute: true
    xml:
      name: AccLinkRequest
  AccDeLinkResponse:
    description: A response of confirmation for account delink.
    type: object
    required:
      - ver
      - timestamp
      - txnid
      - AccLinkDetails
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T10:27:17.699+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: 410c2d2e-4a1e-11e8-960e-0277a9fbfedc
        xml:
          attribute: true
      AccLinkDetails:
        type: object
        required:
          - customerAddress
          - linkRefNumber
          - status
        properties:
          customerAddress:
            type: string
            description: Identifier of the Customer generated during the registration with AA.
            example: customer_address@aa_identifier
            xml:
              attribute: true
          linkRefNumber:
            type: string
            description: Reference number assigned by FIP as part of Account Linking Process.
            example: xxxxxxxxxxxxx
            xml:
              attribute: true
          status:
            type: string
            description: Status of Account Linking
            example: DELINKED
            xml:
              attribute: true
  LinkDelinkTokenRequestWrapper:
    description: >-
      A request of confirmation for account link with a link reference number
      for future identification
    type: object
    required:
      - ver
      - timestamp
      - txnid
      - refNumber
      - token
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T10:27:17.699+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: 410c2d2e-4a1e-11e8-960e-0277a9fbfedc
        xml:
          attribute: true
      refNumber:
        type: string
        description: >-
          Temporary reference number generated by FIP for account linking request
        example: f6b1482e-8f08-11e8-862a-02552b0d3c36
        xml:
          attribute: true
      token:
        type: string
        description: >-
          The token that was sent to the customer by the FIP to confirm account link activity
        example: 999999
        xml:
          attribute: true
  LinkDelinkTokenResponse:
    description: >-
      A response of confirmation for account link with a link reference number
      for future identification
    type: object
    required:
      - ver
      - timestamp
      - txnid
      - AccLinkDetails
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T10:27:17.699+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: 410c2d2e-4a1e-11e8-960e-0277a9fbfedc
        xml:
          attribute: true
      AccLinkDetails:
        type: array
        description: Linked account details.
        items:
          type: object
          required:
            - customerAddress
            - linkRefNumber
            - accRefNumber
            - status
          properties:
            customerAddress:
              type: string
              description: Identifier of the Customer generated during the registration with AA.
              example: customer_address@aa_identifier
              xml:
                attribute: true
            linkRefNumber:
              type: string
              description: Reference number assigned by FIP as part of Account Linking Process.
              example: xxxxxxxxxxxxx
              xml:
                attribute: true
            accRefNumber:
              type: string
              description: Unique FIP Account Reference Number which is linked with the masked account number.
              example: XXXXXXXXXXXX
              xml:
                attribute: true
            status:
              type: string
              description: Status of Account Linking
              example: LINKED
              enum:
                - LINKED
                - DELINKED
              xml:
                attribute: true
  FIRequestWrapper:
    description: A request of financial information to the FIP based on a consent
    required:
      - ver
      - timestamp
      - txnid
      - Consent
      - FIDataRange
      - KeyMaterial
    type: object
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T09:58:50.505Z'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: c4a1450c-d08a-45b4-a475-0468bd10e380
        xml:
          attribute: true
      Consent:
        type: object
        description: Consent Artefact details.
        required:
          - id
          - digitalSignature
        properties:
          id:
            type: string
            description: Unique ID generated by AA after consent approval is given by the customer.
            example: 654024c8-29c8-11e8-8868-0289437bf331
            xml:
              attribute: true
          digitalSignature:
            type: string
            
            description: >-
              Signature part of the Consent JWS. The receiver has to check if
              the given signature matches with the signature in the original
              consent JWS.
            example: >-
              NdjwMjLortTb10dxcJezkvdOxPVvEdZvIqwqVWOHnE8pS_YDswcRPLTRmds2xO-Tvm_A2cFv1qKYpaZnv8Bl6xmZoOsG_F8_40gRZqIhz5hF9puzp8lEEhMlZ6NaX2Y2OYkwHcOBBpCIXpLXB4CMWiefUEWjO9zKDd5JJwZ4vLWeT4qgwvPfRqE60B33tzVlF5E6OA2mKK17sGRXsfrI9obEjL52RMdGo_9bv1HnHfvPlbj5ihj6d_5iTtoh7HUC_X8CrJGvkgkCjP_7of1jPb5QgJ9nx_Yfsxj3vf8zEseZIVISjF3MwBzW7Di4CpfQl4wlnpkQO9MKu78F69Z9Ig
      FIDataRange:
        type: object
        required:
          - from
          - to
        description: Specifies the date time range for which the financial information is requested
        properties:
          from:
            type: string
            format: date-time
            example: '2018-11-27T06:26:29.761Z'
            description: Date-time from which the financial information is requested
            xml:
              attribute: true
          to:
            type: string
            format: date-time
            example: '2018-12-27T06:26:29.761Z'
            description: Date-time till which the financial information is requested
            xml:
              attribute: true
      KeyMaterial:
        $ref: '#/definitions/KeyMaterial'
  FIResponse:
    type: object
    required:
      - ver
      - timestamp
      - txnid
      - consentId
      - sessionId
    description: >-
      Session id and other details to fetch the financial information.
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T10:05:50.505Z'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability. Base-64 encoded UUID
        example: c4a1450c-d08a-45b4-a475-0468bd10e380
        xml:
          attribute: true
      consentId:
        type: string
        description: Unique ID generated by AA after consent approval is given by the customer.
        example: 654024c8-29c8-11e8-8868-0289437bf331
        xml:
          attribute: true
      sessionId:
        type: string
        description: A session ID is a base-64 encoded UUID number that FIP returns to the AA for each financial information access request.
        example: caa2f259-2dc2-4075-87aa-6d81018b6183
        xml:
          attribute: true
  FIFetchRequestWrapper:
    description: >-
      A request to fetch FI data from FIP against given sessionId.
    type: object
    required:
      - ver
      - timestamp
      - txnid
      - sessionId
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T06:41:34.904+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: af5b8023-aabc-4a46-8f37-d3c167129b1e
        xml:
          attribute: true
      sessionId:
        type: string
        description: >-
          A session ID is a base-64 encoded UUID number that FIP returns to the AA for each financial information access request.
        example: caa2f259-2dc2-4075-87aa-6d81018b6183
        xml:
          attribute: true
      fipId:
        type: string
        description: >-
          FIP ID as defined in the Account Aggregator Ecosystem.
        example: FIP-1
        xml:
          attribute: true
      linkRefNumber:
        type: array
        description: >-
          Reference number assigned by FIP as part of Account Linking Process.
        minItems: 1
        uniqueItems: true
        items:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              example: XXXX-XXXX-XXXX
              xml:
                attribute: true
  FIFetchResponse:
    description: >-
      A response of encrypted financial information sent to the requesting AA
      for passing to a customer or a FIU
    required:
      - ver
      - timestamp
      - txnid
      - FI
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T06:41:54.904+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          The unique transaction identifier used for providing an end to end
          traceability.
        example: af5b8023-aabc-4a46-8f37-d3c167129b1e
        xml:
          attribute: true
      FI:
        type: array
        description: >-
          Contains the account-specific metadata with corresponding encrypted
          data for accessing the financial information
        items:
          type: object
          required:
            - fipID
            - data
            - KeyMaterial
          properties:
            fipID:
              type: string
              description: FIP ID as defined in the Account Aggregator Ecosystem.
              example: FIP-1
            data:
              type: array
              items:
                type: object
                required:
                  - linkRefNumber
                  - maskedAccNumber
                  - encryptedFI
                properties:
                  linkRefNumber:
                    type: string
                    description: Reference number assigned by FIP as part of Account Linking Process.
                    example: XXXX-XXXX-XXXX
                  maskedAccNumber:
                    type: string
                    description: Masked account number
                    example: XXXXXXXX4020
                  encryptedFI:
                    type: string                    
                    description: >-
                      Contains the end to end encrypted financial information
            KeyMaterial:
              $ref: '#/definitions/KeyMaterial'
    xml:
      name: FetchFIResponse
  Error:
    type: object
    description: The error code is a unique string that identifies the error.
    required:
      - errCode
      - errMsg
    properties:
      code:
        type: integer
        description: Unique error response code
        xml:
          attribute: true
      msg:
        type: string
        description: Error Message
        xml:
          attribute: true
      detail:
        type: string
        description: Description of the specific error
        xml:
          attribute: true
  KeyMaterial:
    type: object
    required:
      - cryptoAlg
      - Nonce
      - curve
      - DHPublicKey
    description: >-
      Contains the cryptographic parameters that are required to perform
      End-to-End encryption for sharing the financial information between the
      producer and the consumer in a secure manner. Please refer this link for
      more information: https://tools.ietf.org/html/rfc4492
      
    properties:
      cryptoAlg:
        type: string
        example: ECDH
        description: >-
          Specifies the cryptographic standard algorithm used for
          encrypting/decrypting the financial information. Currently ECDH is a crypto algorithm that is supported
        xml:
          attribute: true
      curve:
        type: string
        example: Curve25519
        description: Describes a secure elliptic curve standard that is used to perform ECDH.
        enum:
          - Curve25519
          - X25519
        xml:
          attribute: true
      params:
        type: string
        description: >-
          Specifies the secure standard cryptographic primitives to perform end to end encryption. 
          Use Key-Value pair separated by a semicolon. The value given for cryptographic primitives in 
          example should be used for symmetric encryption(AES-256 bits, GCM-128 bits and No Padding) and key exchange protocol(ECDH).
        example: cipher=AES/GCM/NoPadding;KeyPairGenerator=ECDH
        xml:
          attribute: true
      DHPublicKey:
        type: object
        required:
          - expiry
          - KeyValue
        description: >-
          Contains the public information for performing the ECDH key exchange.
        properties:
          expiry:
            type: string
            format: date-time
            example: '2019-06-01T09:58:50.505Z'
            description: Specifies expiry date of the public key.
            xml:
              attribute: true
          Parameters:
            type: string
            description: >-
              Defines the public parameters used to calculate session (data
                                encryption/decryption) key.
          KeyValue:
            type: string
            description: Contains the value of emphemeral public key
      Nonce:
        type: string
        example: 29512b70-ca84-46b5-9471-63765599cf15
        description: >-
          Nonce is a random string generated every time during 
          the publishing of Ephemeral public key to ensure that 
          old communications cannot be reused in replay attacks.
          Nonce should have a fixed length. Unlike random numbers, 
          random strings do not require byte ordering. 
          Hence session keys can be generated in a platform 
          independent way. Ref: https://tools.ietf.org/html/rfc5116.                         
    xml:
      name: KeyMaterial
  Account:
    type: object
    required:
      - FIType
      - accType
      - accRefNumber
      - maskedAccNumber
    properties:
      FIType:
        type: string
        description: Type of Financial Information
        enum:
          - DEPOSIT
          - TERM_DEPOSIT
          - TERM-DEPOSIT
          - RECURRING_DEPOSIT
          - SIP
          - CP
          - GOVT_SECURITIES
          - EQUITIES
          - BONDS
          - DEBENTURES
          - MUTUAL_FUNDS
          - ETF
          - IDR
          - CIS
          - AIF
          - INSURANCE_POLICIES
          - NPS
          - INVIT
          - REIT
          - GSTR1_3B
          - LIFE_INSURANCE
          - GENERAL_INSURANCE
          - OTHER
        xml:
          attribute: true
      accType:
        type: string
        description: The Account Type or Sub FI Type
        enum:
          - SAVINGS
          - CURRENT
          - DEFAULT
          - NRE
          - NRO
        xml:
          attribute: true
      accRefNumber:
        type: string
        description: >-
          Unique FIP Account Reference Number which is linked with the
          masked account number.
        example: BANK11111111
        xml:
          attribute: true
      maskedAccNumber:
        type: string
        description: Masked account number
        example: XXXXXXX3468
        xml:
          attribute: true
  HeartbeatResponse:
    type: object
    required:
      - ver
      - timestamp
      - Status
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T06:54:54.435Z'
        xml:
          attribute: true
      Status:
        type: string
        description: >-
          Status of the FIP application
        enum:
          - UP
          - DOWN
        default: UP
    xml:
      name: HeartbeatResponse
  ConsentNotificationRequestWrapper:
    description: ''
    type: object
    required:
      - ver
      - timestamp
      - txnid
      - Notifier
      - ConsentStatusNotification
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version
        xml:
          attribute: true
      timestamp:
        type: string
        format: date-time
        example: '2023-06-26T11:39:57.153Z'
        description: Creation timestamp of the message.
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          The unique transaction identifier used for providing an end to end
          traceability. 
        example: 0b811819-9044-4856-b0ee-8c88035f8858
        xml:
          attribute: true
      Notifier:
        type: object
        description: Information about the notifier
        required:
          - type
          - id
        properties:
          type:
            type: string
            description: Type of the notifier entity
            example: AA
            xml:
              attribute: true
          id:
            type: string
            description: Unique ID to identify the entity
            example: AA_1
            xml:
              attribute: true
      ConsentStatusNotification:
        type: object
        description: >-
          Contains the Consent ID and Consent Status details.
        required:
          - consentId
          - consentStatus
        properties:
          consentId:
            type: string
            description: >-
              Unique ID generated by AA after consent approval is given by the customer.
            example: XXXX0-XXXX-XXXX
            xml:
              attribute: true
          consentStatus:
            type: string
            description: Specifies the status of consent artefact
            enum:
              - REVOKED
              - PAUSED
              - ACTIVE
              - EXPIRED
            example: REVOKED
            xml:
              attribute: true
        xml:
          name: ConsentStatusNotification
  ConsentArtefactRequestWrapper:
    type: object
    required:
      - ver
      - txnid
      - consentId
      - createTimestamp
      - signedConsent
      - ConsentUse
      - status
    properties:
      ver:
        type: string
        example: '2.0.0'
        description: API version
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          The unique transaction identifier used for providing an end to end
          traceability. 
        example: 0b811819-9044-4856-b0ee-8c88035f8858
        xml:
          attribute: true
      consentId:
        type: string
        description: Unique ID generated by AA after consent approval is given by the customer.
        example: XXXX-XXXX-XXXX-XXXX
        xml:
          attribute: true
      status:
        type: string
        description: Specifies the status of consent artefact
        enum:
          - ACTIVE
          - PAUSED
          - REVOKED
          - EXPIRED
      createTimestamp:
        type: string
        format: date-time
        example: '2023-06-26T11:39:57.153Z'
        description: Creation time of the Consent Artefact
        xml:
          attribute: true
      signedConsent:
        type: string        
        description: >-
         Consent artefact signed using JWS. See SignedConsentDetail model for consent format.
        example: >-
          eyJhbGciOiJSUzI1NiIsImtpZCI6IjQyNzE5MTNlLTdiOTMtNDlkZC05OTQ5LTFjNzZmZjVmYzVjZiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19.ew0KICAgICAgICAiY29uc2VudFN0YXJ0IjogIjIwMTktMDUtMjhUMTE6Mzg6MjAuMzgwKzAwMDAiLA0KICAgICAgICAiY29uc2VudEV4cGlyeSI6ICIyMDIwLTA1LTI4VDExOjM4OjIwLjM4MSswMDAwIiwNCiAgICAgICAgImNvbnNlbnRNb2RlIjogIlZJRVciLA0KICAgICAgICAiZmV0Y2hUeXBlIjogIk9ORVRJTUUiLA0KICAgICAgICAiY29uc2VudFR5cGVzIjogWw0KICAgICAgICAgICAgIlBST0ZJTEUiLA0KICAgICAgICAgICAgIlNVTU1BUlkiLA0KICAgICAgICAgICAgIlRSQU5TQUNUSU9OUyINCiAgICAgICAgXSwNCiAgICAgICAgImZpVHlwZXMiOiBbDQogICAgICAgICAgICAiREVQT1NJVCIsDQogICAgICAgICAgICAiVEVSTS1ERVBPU0lUIg0KICAgICAgICBdLA0KICAgICAgICAiRGF0YUNvbnN1bWVyIjogew0KICAgICAgICAgICAgImlkIjogImNvb2tpZWphci1hYUBmaW52dS5pbiIsDQogICAgICAgICAgICAidHlwZSI6ICJBQSINCiAgICAgICAgfSwNCiAgICAgICAgIkRhdGFQcm92aWRlciI6IHsNCiAgICAgICAgICAgICJpZCI6ICJCQVJCMEtJTVhYWCIsDQogICAgICAgICAgICAidHlwZSI6ICJGSVAiDQogICAgICAgIH0sDQogICAgICAgICJDdXN0b21lciI6IHsNCiAgICAgICAgICAgICJpZCI6ICJkZW1vQGZpbnZ1Ig0KICAgICAgICB9LA0KICAgICAgICAiQWNjb3VudHMiOiBbDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgImZpVHlwZSI6ICJERVBPU0lUIiwNCiAgICAgICAgICAgICAgICAiZmlwSWQiOiAiQkFSQjBLSU1YWFgiLA0KICAgICAgICAgICAgICAgICJhY2NUeXBlIjogIlNBVklOR1MiLA0KICAgICAgICAgICAgICAgICJsaW5rUmVmTnVtYmVyIjogIlVCSTQ4NTk2NDU3OSIsDQogICAgICAgICAgICAgICAgIm1hc2tlZEFjY051bWJlciI6ICJVQkk4NTIxNzg4MTI3OSINCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgImZpVHlwZSI6ICJERVBPU0lUIiwNCiAgICAgICAgICAgICAgICAiZmlwSWQiOiAiQkFSQjBLSU1YWFgiLA0KICAgICAgICAgICAgICAgICJhY2NUeXBlIjogIlNBVklOR1MiLA0KICAgICAgICAgICAgICAgICJsaW5rUmVmTnVtYmVyIjogIlVCSTQ4NTk2NDUiLA0KICAgICAgICAgICAgICAgICJtYXNrZWRBY2NOdW1iZXIiOiAiVUJJODUyMTc4ODEyIg0KICAgICAgICAgICAgfQ0KICAgICAgICBdLA0KICAgICAgICAiUHVycG9zZSI6IHsNCiAgICAgICAgICAgICJjb2RlIjogIjEwMSIsDQogICAgICAgICAgICAicmVmVXJpIjogImh0dHBzOi8vYXBpLnJlYml0Lm9yZy5pbi9hYS9wdXJwb3NlLzEwMS54bWwiLA0KICAgICAgICAgICAgInRleHQiOiAiV2VhbHRoIG1hbmFnZW1lbnQgc2VydmljZSIsDQogICAgICAgICAgICAiQ2F0ZWdvcnkiOiB7DQogICAgICAgICAgICAgICAgInR5cGUiOiAicHVycG9zZUNhdGVnb3J5VHlwZSINCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgIkZJRGF0YVJhbmdlIjogew0KICAgICAgICAgICAgImZyb20iOiAiMjAxOS0wNS0yOFQxMTozODoyMC4zODMrMDAwMCIsDQogICAgICAgICAgICAidG8iOiAiMjAyMC0wNS0yOFQxMTozODoyMC4zODErMDAwMCINCiAgICAgICAgfSwNCiAgICAgICAgIkRhdGFMaWZlIjogew0KICAgICAgICAgICAgInVuaXQiOiAiTU9OVEgiLA0KICAgICAgICAgICAgInZhbHVlIjogNA0KICAgICAgICB9LA0KICAgICAgICAiRnJlcXVlbmN5Ijogew0KICAgICAgICAgICAgInVuaXQiOiAiSE9VUiIsDQogICAgICAgICAgICAidmFsdWUiOiA0DQogICAgICAgIH0sDQogICAgICAgICJEYXRhRmlsdGVyIjogWw0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICJ0eXBlIjogIlRSQU5TQUNUSU9OQU1PVU5UIiwNCiAgICAgICAgICAgICAgICAib3BlcmF0b3IiOiAiPiIsDQogICAgICAgICAgICAgICAgInZhbHVlIjogIjIwMDAwIg0KICAgICAgICAgICAgfQ0KICAgICAgICBdDQogICAgfQ.O3KPh-eTpW2w47QXYidOBe1Hk2y7djVAEcOnZyRRvxQ3cY18-9ZWiodF16jff-e7yNQgsYZpAy95Fx2Fft8LoYugkYh9_6qHiG_7LCtW8Ng4nCMgZM3Wwsj11ks1msrK5C1ksPrGlTkFhm9-FufNkPTAlW76_5Sb8G_lOsIj1lB8TrvKpOvPlhEIgsS4WBNdPfv3SBqTV2suw2LvkX3QTilqwuMgXMkrm9-RYL90fweX_yyoyaBWHOJNQaKNuQWPpoRRNHGOx3v4_QiwgrELdfeTVtKn6R_AsfaBoEthQ3wrc8tY1q0Wx5j0x18NdU2R2C26dHyZ9M11dEH99psA1A
      ConsentUse:
        type: object
        description: Section defining the parameters for consent tracking
        required:
          - logUri
          - count
          - lastUseDateTime
        properties:
          logUri:
            type: string
            description: Logging; logUri can be any valid URI including an email address
            xml:
              attribute: true
          count:
            type: number
            description: Number of times the consent has been used
            example: 1
            xml:
              attribute: true
          lastUseDateTime:
            type: string
            format: date-time
            description: Datetime when Consent was last used.
            example: '2018-12-06T11:39:57.153Z'
            xml:
              attribute: true
    xml:
      name: ConsentArtefact
  SignedConsentDetail:
        type: object
        description: >-
          This Section defines the consent and should be digitally signed. CAN
          NOT CHANGE after generation, for any change a new consent has to be
          generated.
        required:
          - consentStart
          - consentExpiry
          - consentMode
          - fetchType
          - consentTypes
          - fiTypes
          - DataConsumer
          - DataProvider
          - Customer
          - Purpose
          - FIDataRange
          - DataLife
          - Frequency
          - Accounts
        properties:
          consentStart:
            type: string
            format: date-time
            example: '2019-12-06T11:39:57.153Z'
            description: >-
              Start date-time of the consent. This field would allow for
              Post-Dated consent.
            xml:
              attribute: true
          consentExpiry:
            type: string
            format: date-time
            example: '2019-12-06T11:39:57.153Z'
            description: Expiry date-time for the consent
            xml:
              attribute: true
          consentMode:
            type: string
            description: Consent Mode as defined in the AA Technical Specification
            enum:
              - VIEW
              - STORE
              - QUERY
              - STREAM
            xml:
              attribute: true
          fetchType:
            type: string
            description: FI Fetch type. Could be ONETIME or PERIODIC
            enum:
              - ONETIME
              - PERIODIC
            xml:
              attribute: true
          consentTypes:
            type: array
            description: Defines the category of financial information which can be fetched using consent
            minItems: 1
            items:
              type: string
              enum:
                - PROFILE
                - SUMMARY
                - TRANSACTIONS
              example: PROFILE
          fiTypes:
            $ref: '#/definitions/FITypes'
          DataConsumer:
            type: object
            required:
              - id
              - type
            description: >-
              The entity which receives data. For a consent
              between FIP & AA, DataConsumer would be AA whereas for a consent
              between FIU/AA Application & AA, DataConsumer would be FIU/AA Client.
            properties:
              id:
                type: string
                description: Data Consumer ID.
                example: AA_ID
                xml:
                  attribute: true
              type:
                type: string
                description: Data consumer type. AA in the consent between FIP & AA.
                enum:
                  - AA
                xml:
                  attribute: true
          DataProvider:
            type: object
            description: >-
              The entity which provides data. For a consent
              between FIP & AA, DataProvider would be FIP whereas for a consent
              between FIU/AA Client & AA, DataProvider would be AA.
            required:
              - id
              - type
            properties:
              id:
                type: string
                description: Data Provider ID
                example: FIP_ID
                xml:
                  attribute: true
              type:
                type: string
                description: Data Provider Type
                enum:
                  - FIP
                example: FIP
          Customer:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                description: Identifier of the Customer generated during the registration with AA.
                example: customer_identifier@AA_identifier
                xml:
                  attribute: true
          Accounts:
            type: array
            description: >-
              List of accounts which the consent would fetch FI from. For a
              consent between FIU & AA, this list could have accounts from
              multiple FIP. For a consent between FIP & AA, only accounts from
              particular FIP must be present in this section.
            items:
              type: object
              required:
                - fiType
                - fipId
                - accType
                - linkRefNumber
                - maskedAccNumber
              properties:
                fiType:
                  type: string
                  description: Type of Financial Information
                  example: DEPOSIT
                  xml:
                    attribute: true
                fipId:
                  type: string
                  description: FIP ID as defined in the Account Aggregator Ecosystem.
                  example: FIP1
                  xml:
                    attribute: true
                accType:
                  type: string
                  description: The Account Type or Sub FI Type
                  example: SAVINGS
                  xml:
                    attribute: true
                linkRefNumber:
                  type: string
                  description: Reference number assigned by FIP as part of Account Linking Process.
                  example: XXXX-XXXX-XXXX
                  xml:
                    attribute: true
                maskedAccNumber:
                  type: string
                  description: Masked account number
                  example: XXXXXXXX4020
                  xml:
                    attribute: true
            xml:
              name: Accounts
          Purpose:
            $ref: '#/definitions/Purpose'
          FIDataRange:
            description: Specifies the date time range for which the financial information is requested
            type: object
            required:
              - from
              - to
            properties:
              from:
                type: string
                format: date-time
                description: Date-time from which the financial information is requested
                xml:
                  attribute: true
                example: '2017-07-13T11:33:34.509Z'
              to:
                type: string
                format: date-time
                description: Date-time till which the financial information is requested
                xml:
                  attribute: true
                example: '2018-07-13T11:33:34.509Z'
          DataLife:
            description: >-
              Datalife defines for how long the FIU/AA Client can store the data
            type: object
            required:
              - unit
              - value
            properties:
              unit:
                type: string
                description: A unit of how long consumer can store the data.
                xml:
                  attribute: true
                enum:
                  - DAY
                  - MONTH
                  - YEAR
                  - INF
              value:
                type: number
                description: 'Value for the Datalife Unit. If INF, value must be set to 0.'
                xml:
                  attribute: true
          Frequency:
            description: >-
              Defines frequency of FI data fetch within the defined time unit. E.g.HOURLY,DAILY,MONTHLY,YEARLY.
            type: object
            required:
              - unit
              - value
            properties:
              unit:
                type: string
                example: HOUR
                description: >-
                  Defines the time unit of the frequency to access the financial information.
                enum:
                  - HOUR
                  - DAY
                  - MONTH
                  - YEAR
                xml:
                  attribute: true
              value:
                type: number
                example: 1
                description: >-
                  Define the number of times FI data can be fetched within the defined time unit.
                xml:
                  attribute: true
            xml:
              name: Frequency
          DataFilter:
            type: array
            description: Rules that will be utilized by FIP to filter the data
            items:
              type: object
              required:
                - type
                - operator
                - value
              properties:
                type:
                  type: string
                  description: The condition to filter the data on.
                  enum:
                    - TRANSACTIONTYPE
                    - TRANSACTIONAMOUNT
                  example: TRANSACTIONAMOUNT
                  xml:
                    attribute: true
                operator:
                  type: string
                  description: Operator to filter data by.
                  enum:
                    - '='
                    - '!='
                    - '>'
                    - '<'
                    - '>='
                    - '<='
                  example: '>='
                  xml:
                    attribute: true
                value:
                  type: string
                  description: Value to filter data
                  example: 20000
                  xml:
                    attribute: true
            xml:
              name: DataFilter
  Purpose:
    description: Purpose of the consent (Defined in AA Technical Specification)
    type: object
    required:
      - code
    properties:
      code:
        type: string
        description: Purpose Code as defined in the AA Technical Specification
        example: '101'
        xml:
          attribute: true
      refUri:
        type: string
        description: URL where the purpose is further defined
        example: 'https://api.rebit.org.in/aa/purpose/101.xml'
        xml:
          attribute: true
      text:
        type: string
        description: Textual Description
        example: Wealth management service
        xml:
          attribute: true
      Category:
        properties:
          type:
            type: string
            description: Category name of the Purpose code
            xml:
              attribute: true
  FITypes:
    type: array
    minItems: 1
    items:
      type: string
      description: List of financial information types.
      example: DEPOSIT
      enum:
        - DEPOSIT
        - TERM_DEPOSIT
        - TERM-DEPOSIT
        - RECURRING_DEPOSIT
        - SIP
        - CP
        - GOVT_SECURITIES
        - EQUITIES
        - BONDS
        - DEBENTURES
        - MUTUAL_FUNDS
        - ETF
        - IDR
        - CIS
        - AIF
        - INSURANCE_POLICIES
        - NPS
        - INVIT
        - REIT
        - GSTR1_3B
        - LIFE_INSURANCE
        - GENERAL_INSURANCE
        - OTHER
  ErrorResponse:
    description: Generic Error Response. Specific Error Responses extend from this.
    type: object
    required:
      - ver
      - txnid
      - timestamp
      - errorCode
      - errorMsg
    properties:
      ver:
        type: string
        description: API version.
        example: '2.0.0'
        xml:
          attribute: true
      txnid:
        type: string
        description: Transaction id of the request. Must be same as the value sent in the request
        example: 0b811819-9044-4856-b0ee-8c88035f8858'
        xml:
          attribute: true
      timestamp:
        type: string
        format: date-time
        description: Response timestamp
        xml:
          attribute: true
        example: '2023-06-26T11:33:34.509Z' 
      errorCode:
        type: string
        description: Error code indicating the problem with the request
        xml:
          attribute: true
      errorMsg:
        type: string
        description: Error message with additional details. Ensure no sensitive information is included in the error message.
        example: Error code specific error message     
  BadRequest:
    description: Response to bad request.
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    properties:
      errorCode:
        type: string
        description: Error code pertaining to the invalid request
        enum:
          - InvalidRequest
          - InvalidURI
          - InvalidSecurity
          - SignatureDoesNotMatch
        xml:
          attribute: true
  NotFound:
    description: Requested resource was not found.
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    properties:
      errorCode:
        type: string
        description: Indicates that the version ID specified in the request does not match an existing version
        enum:
          - NoSuchVersion
        xml:
          attribute: true
  Conflict:
    description: IdempotencyError when UUID/Id is not unique
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    properties:
      errorCode:
        description: IdempotencyError when UUID/Id is not unique
        type: string
        enum:
          - IdempotencyError
        xml:
          attribute: true
  PreconditionFailed:
    description: At least one of the preconditions you specified did not hold
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    properties:
      errorCode:
        type: string
        enum:
          - PreconditionFailed
        xml:
          attribute: true
  InternalServerError:
    description: Encountered an internal error. Please try again
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    properties:
      errorCode:
        type: string
        enum:
          - InternalError
        xml:
          attribute: true
  NotImplemented:
    description: Trying to access an unimplemented feature/API. Required when we provide backward compatiable API.
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    properties:
      errorCode:
        type: string
        enum:
          - NotImplemented
        xml:
          attribute: true
  ServiceUnavailable:
    description: Service is unavailable
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    properties:
      errorCode:
        type: string
        enum:
          - ServiceUnavailable
        xml:
          attribute: true
  NotFoundDiscover:
    description: Received an invalid response from the upstream server
    allOf:
      - $ref: '#/definitions/NotFound'
    properties:
      errorCode:
        type: string
        enum:
          - NoSuchVersion
          - CannotIdentifyCustomer
          - UnsupportedFIType
          - NoAccountsFound
        xml:
          attribute: true
  BadRequestLink:
    description: Received an invalid response from the upstream server
    allOf:
      - $ref: '#/definitions/BadRequest'
    properties:
      errorCode:
        type: string
        enum:
          - InvalidRequest
          - InvalidURI
          - InvalidLinkRefNumber
          - InvalidSecurity
          - SignatureDoesNotMatch
        xml:
          attribute: true
  NotFoundLink:
    description: Not found
    allOf:
      - $ref: '#/definitions/NotFound'
    properties:
      errorCode:
        type: string
        enum:
          - NoSuchVersion
          - AccountNotFound
        xml:
          attribute: true
  BadRequestLinkToken:
    description: Bad Request confirming linking token
    allOf:
      - $ref: '#/definitions/BadRequest'
    properties:
      errorCode:
        type: string
        enum:
          - InvalidRequest
          - InvalidURI
          - InvalidSecurity
          - SignatureDoesNotMatch
          - InvalidLinkToken
        xml:
          attribute: true
  UnauthorizedLinkToken:
    description: Unauthorized request.
    properties:
      ver:
        type: string
        description: API version
        example: '2.0.0'
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T06:13:30.967+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: f35761ac-4a18-11e8-96ff-0277a9fbfedc
        xml:
          attribute: true
      errorCode:
        type: string
        enum:
          - LinkTokenExpired
      errorMsg:
        type: string
        description: >-
          Error message with additional details. Ensure no sensitive information
          is included in the error message.
        xml:
          attribute: true
  BadRequestFIRequest:
    description: Bad Request during FIRequest
    allOf:
      - $ref: '#/definitions/BadRequest'
    properties:
      errorCode:
        type: string
        enum:
          - InvalidRequest
          - InvalidURI
          - InvalidSecurity
          - SignatureDoesNotMatch
          - InvalidKey
          - InvalidDateRange
          - InvalidConsentId
          - InvalidConsentStatus
          - InvalidConsentDetail
          - InvalidConsentUse
        xml:
          attribute: true
  ForbiddenFIRequest:
    description: Access is forbidden.
    properties:
      ver:
        type: string
        description: API version
        example: '2.0.0'
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T06:13:30.967+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: f35761ac-4a18-11e8-96ff-0277a9fbfed
      errorCode:
        type: string
        enum:
          - ConsentExpired
          - ConsentRevoked
          - ConsentPaused
        xml:
          attribute: true
      errorMsg:
        type: string
        description: >-
          Error message with additional details. Ensure no sensitive information
          is included in the error message.
        example: Error code specific error message
  NotFoundFIRequest:
    description: Not Found error during FI Request
    allOf:
      - $ref: '#/definitions/NotFound'
    properties:
      errorCode:
        type: string
        enum:
          - NoSuchVersion
          - ExpiredKeyMaterial
        xml:
          attribute: true
  BadRequestFIFetch:
    description: Bad Request during FI Fetch
    allOf:
      - $ref: '#/definitions/BadRequest'
    properties:
      errorCode:
        type: string
        enum:
          - InvalidRequest
          - InvalidURI
          - InvalidSecurity
          - SignatureDoesNotMatch
          - InvalidKey
          - InvalidDateRange
          - InvalidSessionId
          - InvalidConsentId
          - InvalidConsentStatus
          - InvalidConsentDetail
          - InvalidConsentUse
        xml:
          attribute: true
  ForbiddenFIFetch:
    description: Access is forbidden during FI Fetch
    properties:
      ver:
        type: string
        description: API version
        example: '2.0.0'
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T06:13:30.967+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: f35761ac-4a18-11e8-96ff-0277a9fbfed
      errorCode:
        type: string
        enum:
          - DataFetchRequestInProgress
          - ConsentExpired
          - ConsentRevoked
          - ConsentPaused
        xml:
          attribute: true
      errorMsg:
        type: string
        description: >-
          Error message with additional details. Ensure no sensitive information
          is included in the error message.
        example: Error code specific error message
  NotFoundFIFetch:
    description: Not Found error during FI Fetch
    allOf:
      - $ref: '#/definitions/NotFound'
    properties:
      errorCode:
        type: string
        enum:
          - NoSuchVersion
          - NoDataFound
          - ExpiredKeyMaterial
        xml:
          attribute: true
  UnauthorizedAccess:
    description: Unauthorized Access
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    properties:
      errorCode:
        type: string
        enum:
          - Unauthorized
        xml:
          attribute: true          
  ConsentNotificationResponse:
    description: Success response for receiving consent notification
    required:
      - ver
      - timestamp
      - txnid
      - response
    properties:
      ver:
        type: string
        description: API version
        example: '2.0.0'
        xml:
          attribute: true
      timestamp:
        type: string
        description: Creation timestamp of the message.
        format: date-time
        example: '2023-06-26T06:13:30.967+0000'
        xml:
          attribute: true
      txnid:
        type: string
        description: >-
          Unique transaction identifier used for providing an end to end
          traceability.
        example: f35761ac-4a18-11e8-96ff-0277a9fbfedc
        xml:
          attribute: true
      response:
        type: string
        description: Response description
        example: OK
    xml:
      name: ConsentNotificationResponse
  BadRequestConsentNotification:
    description: Bad Request during Consent Notification
    allOf:
      - $ref: '#/definitions/BadRequest'
    properties:
      errorCode:
        type: string
        enum:
          - InvalidRequest
          - InvalidURI
          - InvalidSecurity
          - SignatureDoesNotMatch
          - InvalidNotifier
        xml:
          attribute: true
